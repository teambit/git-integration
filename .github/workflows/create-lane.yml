name: Create Lane

on:
  pull_request:
    types: [opened]
    branches:
      - main

jobs:
  setup_npm:
    name: setup npm

    runs-on: ubuntu-latest

    if: startsWith(github.event.pull_request.head.ref, 'components/')

    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

  extract_local_lane_name:
    name: extract local lane name

    runs-on: ubuntu-latest

    if: startsWith(github.event.pull_request.head.ref, 'components/')

    outputs:
      extracted: ${{ steps.extract.outputs.replaced }}

    steps:
      - name: Replace illegal characters from head branch name
        id: extract
        uses: frabert/replace-string-action@v2.0
        with:
          pattern: "/"
          string: ${{ github.event.pull_request.head.ref }}
          replace-with: "_"
          flags: "g"

  export_lane:
    name: create and export lane

    runs-on: ubuntu-latest

    needs: [setup_npm, extract_local_lane_name]

    if: startsWith(github.event.pull_request.head.ref, 'components/')

    env:
      BIT_TOKEN: ${{ secrets.BIT_TOKEN }}
      LANE_NAME: ${{ needs.extract_local_lane_name.outputs.extracted }}
      LANE_ARTIFACT_FILE_NAME: ${{ needs.extract_local_lane_name.outputs.extracted }}_scope.txt

    steps:
      - name: Install Bit Version Manager
        run: npm i -g @teambit/bvm
      - name: Install latest Bit version
        run: bvm install
      - name: add bvm bin folder to path
        run: echo "$HOME/bin" >> $GITHUB_PATH
      - name: Set up bit config
        run: |
          bit config set analytics_reporting false
          bit config set anonymous_reporting false
          bit config set user.token $BIT_TOKEN
      - name: add bvm bin folder to path
        run: echo "$HOME/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - name: Create Local Lane
        run: bit lane create $LANE_NAME
      - name: Install and Compile
        run: bit install && bit compile
      - name: Snap All Components without building them
        run: BIT_FEATURES=build-on-ci bit snap
      - name: Export the Lane and the Components
        run: bit export > export_output.txt
      - name: Extract Remote Scope
        run: grep -n "remote" export_output.txt | tail -1 | awk '{print $NF}' > $LANE_ARTIFACT_FILE_NAME
      - name: Copy .git/bit/scope.json to Lane Artifact File
        run: cat .git/bit/scope.json >> $LANE_ARTIFACT_FILE_NAME
      - name: Upload Lane Scope
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.extract_local_lane_name.outputs.extracted }}_scope
          path: ${{ needs.extract_local_lane_name.outputs.extracted }}_scope.txt